# update_fastlane

default_platform(:ios)

platform :ios do
  before_all do
    ENV['KEYCHAIN_NAME'] = "TempKeychain.keychain"
    create_keychain(
      name: ENV['KEYCHAIN_NAME'],
      password: ENV['KEYCHAIN_NAME'],
      default_keychain: true,
      unlock: true,
      timeout: 3600,
    )
  end

  desc "Submit a new build to Firebase App Distribution"
  lane :tst do
    add_badge(dark: true)
    register_devices(
        devices_file: "../devices.txt",
        team_id: ENV["APPLE_DEVELOPER_TEAM_ID"],
        username: ENV["FASTLANE_EMAIL"]
    )
    match(
      type: "adhoc",
      force_for_new_devices: true,
      keychain_name: ENV['KEYCHAIN_NAME'],
      keychain_password: ENV['KEYCHAIN_NAME']
    )
    automatic_code_signing(
      use_automatic_signing: false
    )
    update_project_provisioning(
      profile: ENV["sigh_#{ENV["APP_ID"]}_adhoc_profile-path"],
      build_configuration: "Release-tst",
      code_signing_identity: "iPhone Distribution"
    )
    increment_version_number(
      version_number: ENV["VERSION_NUMBER"]
    )
    increment_build_number(
      build_number: ENV["BUILD_NUMBER"]
    )
    build_ios_app(
      scheme: "tst",
      configuration: "Release-tst",
      xcargs: "-allowProvisioningUpdates",
      export_options: {
        signingStyle: "manual",
        method: "ad-hoc",
        provisioningProfiles: {
          "#{ENV["APP_ID"]}": "match AdHoc #{ENV["APP_ID"]}"
        }
      },
      output_name: "Runner.ipa"
    )
    firebase_app_distribution(
      app: ENV["FIREBASE_IOS_TEST_APP_ID"],
      ipa_path: "Runner.ipa",
      firebase_cli_token: ENV["FIREBASE_CLI_TOKEN"],
      release_notes: ENV["CHANGELOG"]
    )
  end

  desc "Deploy a new version to the AppStore"
  lane :prod do
    match(
      type: "appstore",
    )
    automatic_code_signing(
      use_automatic_signing: false
    )
    update_project_provisioning(
      profile: ENV["sigh_#{ENV["APP_ID"]}_appstore_profile-path"],
      build_configuration: "Release-prod",
      code_signing_identity: "iPhone Distribution"
    )
    increment_version_number(
      version_number: ENV["VERSION_NUMBER"]
    )
    increment_build_number(
      build_number: ENV["BUILD_NUMBER"]
    )
    build_app(
      scheme: "prod",
      configuration: "Release-prod",
      xcargs: "-allowProvisioningUpdates",
      export_options: {
        signingStyle: "manual",
        method: "appstore",
        provisioningProfiles: {
          "#{ENV["APP_ID"]}": "match AppStore #{ENV["APP_ID"]}"
        }
      },
      output_name: "Runner.ipa"
    )
    upload_to_testflight(
      app_identifier: ENV["APP_ID"],
      username: ENV["FASTLANE_USER"],
      skip_waiting_for_build_processing: true,
      team_id: ENV["APP_STORE_CONNECT_TEAM_ID"],
      ipa: "Runner.ipa"
    )
  end
end
